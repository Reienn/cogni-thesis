
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$client-primary: mat-palette($mat-indigo);
$client-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$client-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$client-theme: mat-light-theme($client-primary, $client-accent, $client-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($client-theme);

/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
* {
  box-sizing: border-box;
}

app-game-task {
  .next-task-button {
    position: absolute;
    bottom: 5px;
    right: 5px;
    z-index: 100;
  }
  .task-content {
    .task-content-dialogue, .task-content-notepad {
      width: 50%;
      float: left;
    }
    .row:after {
      content: "";
      display: table;
      clear: both;
    }
    .task-content-notepad {
      .questions {
        .question {
          min-width: 100px;
          margin-right: 10px;
        }
        .answer-placeholder {
          display: inline-block;
          background: #eeeeee;
          border-radius: 16px;
          width: 300px;
          height: 32px;
          &.active-placeholder.empty-placeholder  {
            background: #b0bcff;
          }
          &.correct:not(.empty-placeholder) {
            background: #b9ffb0;
          }
          &.incorrect:not(.empty-placeholder) {
            background: #ffb0b0;
          }
        }
      }
      .answers {
        margin-top: 50px;
        min-height: 42px;
        padding: 5px;
        background: #eeeeee;
        border-radius: 16px;
      }
      .answer {
        display: inline-block;
        padding: 7px 12px;
        margin-right: 10px;
        background: #3F51B5;
        color: #fff;
        border-radius: 16px;
        font-size: 14px;
        font-weight: 500;
      }
    }
  }
  .clues-bar {
    position: absolute;
    bottom: 0;
    width: 100%;
    height: 100px;
    padding: 10px;
    background: #eee;
    display: flex;
    justify-content: center;
    .clue-item {
      display: inline-block;
      background: #fff;
      height: 80px;
      width: 80px;
      border-radius: 50%;
      margin: 0 10px;
      .clue-img {
        display: block;
        max-width: 70px;
        max-height: 70px;
        margin: auto;
        position: relative;
        top: 50%;
        transform: translateY(-50%);
      }
    }
  }
  .scene {
    .scene-svg {
      position: fixed;
      width: 100%;
      max-height: 100%;
    }
  }
  .command-box {
    position: absolute;
    top: 100px;
    right: 20px;
    width: 200px;
    height: 100px;
    background: #eee;
    border-radius: 16px;
    z-index: 50;
    text-align: center;
    .command{
      position: relative;
      top: 50%;
      transform: translateY(-50%);
      padding: 0;
      margin: 0;
    }
  }
}


// DRAGULA
/* in-flight clone */
.gu-mirror {
  position: fixed !important;
  margin: 0 !important;
  z-index: 9999 !important;
  opacity: 0.8;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=80)";
  filter: alpha(opacity=80);
  pointer-events: none;
}
/* high-performance display:none; helper */
.gu-hide {
  left: -9999px !important;
}
/* added to mirrorContainer (default = body) while dragging */
.gu-unselectable {
  -webkit-user-select: none !important;
  -moz-user-select: none !important;
  -ms-user-select: none !important;
  user-select: none !important;
}
/* added to the source element while its mirror is dragged */
.gu-transit {
  opacity: 0.2;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=20)";
  filter: alpha(opacity=20);
}